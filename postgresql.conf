# Слушать не только localhost, порт 9426
listen_addresses = '*'
port = 9426
# Параметры для OLTP нагрузки
# Одновременных пользователей: 250 * 3 сессии = 750 (макс. соединений)
max_connections = 750

# Память (например, 16 ГБ RAM)
shared_buffers = 1GB                 # ~25% от RAM
temp_buffers = 128MB                 # Используется для временных таблиц в сессии. 128 MB — хорошо для OLTP с временными операциями.
work_mem = 16MB                      # на одну операцию сортировки или хеша в одной сессии, учитывая 750 одновременных сессий (16MB * 750 ~ 12GB)
effective_cache_size = 10GB          # объем кэша ОС

# Оптимизация для высокой нагрузки записи
checkpoint_timeout = 5min           # Чем дольше, тем реже контрольные точки → лучше производительность, но выше риск потери при сбое
fsync = off                          # ДОЛЖНО быть on, чтобы избежать потери данных. ДЛя проихводительности отключаем
commit_delay = 10000                # Указывает задержку (в микросекундах) перед записью коммита на диск. 10ms (хорошо для HDD)

# WAL файлы
wal_level = replica                 # Требуется для архивации / репликации, но также увеличивает объем WAL
archive_mode = on
wal_log_hints = on                  # Требуется для некоторых типов бэкапов
archive_command = 'scp %p postgres4@pg111:/var/db/postgres4/wal_archive/%f'
wal_buffers = 16MB                  # Полезно при высокой активности записи, особенно для больших транзакций.


# Формат лог-файлов
log_destination = 'csvlog'        # логируем в формате CSV
logging_collector = on            # включает сбор логов во внешние файлы

# Путь и формат файлов логов
log_directory = 'log'             # директория логов внутри $PGDATA
log_filename = 'postgresql-%a'    # будет создавать файл на каждый день недели (по имени дня: Mon, Tue...)

log_truncate_on_rotation = on     # перезаписывать лог при ротации
log_rotation_age = 1d             # ротация каждый день
log_rotation_size = 0             # ротация не зависит от размера

# Уровень логирования
log_min_messages = error          # логируем только ERROR и выше

# Дополнительное логирование
log_checkpoints = on              # логировать контрольные точки
log_connections = on              # логировать подключения
log_disconnections = on           # логировать отключения

# перенаправить временные таблицы в пользовательское табличное пространство (twv39)
temp_tablespaces = 'twv39'


